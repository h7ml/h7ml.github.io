import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o as t,c as p,d as n,e as o,a as c,f as i}from"./app-Cbix2SPG.js";const l={},r={href:"https://gitee.com/dgiiot/dgiot-dashboard/blob/a5d46efd3787f5be3e3e68774f00e1b1850faee5/src/dgiot/index.js#L38",target:"_blank",rel:"noopener noreferrer"},u=i(`<h2 id="vue2" tabindex="-1"><a class="header-anchor" href="#vue2"><span>vue2</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> requireComponent <span class="token operator">=</span> require<span class="token punctuation">.</span><span class="token function">context</span><span class="token punctuation">(</span><span class="token string">&#39;./components&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[A-Z]\\w+\\.(vue|js)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取组件配置" tabindex="-1"><a class="header-anchor" href="#获取组件配置"><span>获取组件配置</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> _ <span class="token keyword">from</span> <span class="token string">&#39;lodash&#39;</span><span class="token punctuation">;</span>
requireComponent<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">fileName</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> componentConfig <span class="token operator">=</span> <span class="token function">requireComponent</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> componentName <span class="token operator">=</span> _<span class="token punctuation">.</span><span class="token function">upperFirst</span><span class="token punctuation">(</span>
    _<span class="token punctuation">.</span><span class="token function">camelCase</span><span class="token punctuation">(</span>
      fileName
        <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.\\w+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="全局注册组件" tabindex="-1"><a class="header-anchor" href="#全局注册组件"><span>全局注册组件</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span>componentName<span class="token punctuation">,</span> componentConfig<span class="token punctuation">.</span>default <span class="token operator">||</span> componentConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="vite-注册全局组件的方式" tabindex="-1"><a class="header-anchor" href="#vite-注册全局组件的方式"><span>Vite 注册全局组件的方式</span></a></h2><h3 id="import-meta-glob" tabindex="-1"><a class="header-anchor" href="#import-meta-glob"><span>import.meta.glob()</span></a></h3><h3 id="import-meta-globeager" tabindex="-1"><a class="header-anchor" href="#import-meta-globeager"><span>import.meta.globEager()</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> components <span class="token operator">=</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span><span class="token function">glob</span><span class="token punctuation">(</span><span class="token string">&#39;./components/*/*.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">install</span><span class="token punctuation">(</span><span class="token parameter">app</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>components<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> name <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token function">defineAsyncComponent</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在-main-js-文件中-import-并-use" tabindex="-1"><a class="header-anchor" href="#在-main-js-文件中-import-并-use"><span>在 main.js 文件中 import 并 use</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App.vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> components <span class="token keyword">from</span> <span class="token string">&#39;./components/index.js&#39;</span><span class="token punctuation">;</span>
<span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>components<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因为在 Vite 中不能使用 webpack 的 require.context()方式来读取文,所以之前使用 webpack 注册全局组件的方式就不能使用了。</p>`,13);function d(k,m){const a=e("ExternalLinkIcon");return t(),p("div",null,[n("p",null,[n("a",r,[o("dgiot-dashboard 最佳实践"),c(a)])]),u])}const h=s(l,[["render",d],["__file","automatic-registration-global-components.html.vue"]]),b=JSON.parse(`{"path":"/posts/vite/automatic-registration-global-components.html","title":"vue2与vue3全局组件注册","lang":"zh-CN","frontmatter":{"icon":"vue","order":3,"date":"2021-05-27T00:00:00.000Z","author":"h7ml","title":"vue2与vue3全局组件注册","category":"vite","tag":"vite","star":true,"description":"dgiot-dashboard 最佳实践 vue2 获取组件配置 全局注册组件 Vite 注册全局组件的方式 import.meta.glob() import.meta.globEager() 在 main.js 文件中 import 并 use 因为在 Vite 中不能使用 webpack 的 require.context()方式来读取文,所以之...","head":[["link",{"rel":"canonical","href":"https://www.h7ml.cn/posts/vite/automatic-registration-global-components.html"}],["meta",{"property":"og:url","content":"https://www.h7ml.cn/posts/vite/automatic-registration-global-components.html"}],["meta",{"property":"og:site_name","content":"h7ml-前端物语"}],["meta",{"property":"og:title","content":"vue2与vue3全局组件注册"}],["meta",{"property":"og:description","content":"dgiot-dashboard 最佳实践 vue2 获取组件配置 全局注册组件 Vite 注册全局组件的方式 import.meta.glob() import.meta.globEager() 在 main.js 文件中 import 并 use 因为在 Vite 中不能使用 webpack 的 require.context()方式来读取文,所以之..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-03T04:52:44.000Z"}],["meta",{"property":"article:author","content":"h7ml"}],["meta",{"property":"article:tag","content":"vite"}],["meta",{"property":"article:published_time","content":"2021-05-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-03T04:52:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vue2与vue3全局组件注册\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-05-27T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-03T04:52:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"h7ml\\"}]}"]]},"headers":[{"level":2,"title":"vue2","slug":"vue2","link":"#vue2","children":[{"level":3,"title":"获取组件配置","slug":"获取组件配置","link":"#获取组件配置","children":[]},{"level":3,"title":"全局注册组件","slug":"全局注册组件","link":"#全局注册组件","children":[]}]},{"level":2,"title":"Vite 注册全局组件的方式","slug":"vite-注册全局组件的方式","link":"#vite-注册全局组件的方式","children":[{"level":3,"title":"import.meta.glob()","slug":"import-meta-glob","link":"#import-meta-glob","children":[]},{"level":3,"title":"import.meta.globEager()","slug":"import-meta-globeager","link":"#import-meta-globeager","children":[]},{"level":3,"title":"在 main.js 文件中 import 并 use","slug":"在-main-js-文件中-import-并-use","link":"#在-main-js-文件中-import-并-use","children":[]}]}],"git":{"createdTime":1683089564000,"updatedTime":1683089564000,"contributors":[{"name":"h7ml","email":"h7ml@qq.com","commits":1}]},"readingTime":{"minutes":0.68,"words":204},"filePathRelative":"posts/vite/automatic-registration-global-components.md","localizedDate":"2021年5月27日","excerpt":"<p><a href=\\"https://gitee.com/dgiiot/dgiot-dashboard/blob/a5d46efd3787f5be3e3e68774f00e1b1850faee5/src/dgiot/index.js#L38\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">dgiot-dashboard 最佳实践</a></p>\\n<h2>vue2</h2>\\n<div class=\\"language-javascript\\" data-ext=\\"js\\" data-title=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">import</span> Vue <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'vue'</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">const</span> requireComponent <span class=\\"token operator\\">=</span> require<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">context</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'./components'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">,</span> <span class=\\"token regex\\"><span class=\\"token regex-delimiter\\">/</span><span class=\\"token regex-source language-regex\\">[A-Z]\\\\w+\\\\.(vue|js)$</span><span class=\\"token regex-delimiter\\">/</span></span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}`);export{h as comp,b as data};
