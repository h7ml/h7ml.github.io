import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as e,f as a}from"./app-Cbix2SPG.js";const t={},o=a(`<p>用于配置 ESLint 规则的配置文件</p><p>通常的表现形式有：</p><ul><li><code>package.json</code> 中配置 <code>eslintConfig</code> 字段</li><li>使用 <code>json</code>、<code>javascript</code>、<code>yaml</code> 编写的 <code>.eslintrc.*</code> 文件</li></ul><p>有很多信息可以配置：</p><ul><li>Environments - 指定脚本的运行环境。每种环境都有一组特定的预定义全局变量。</li><li>Globals - 脚本在执行期间访问的额外的全局变量。</li><li>Rules - 启用的规则及其各自的错误级别。</li></ul><h2 id="例子" tabindex="-1"><a class="header-anchor" href="#例子"><span>例子</span></a></h2><p>一个 <code>.eslintrc</code> 文件示例(使用 json 编写)</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;extends&quot;</span><span class="token operator">:</span> <span class="token string">&quot;@alexzzz&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;rules&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="eslint-与-prettierrc-使用" tabindex="-1"><a class="header-anchor" href="#eslint-与-prettierrc-使用"><span>eslint 与 prettierrc 使用</span></a></h1><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><ol><li><code>vscode</code>搜索插件<code>eslint</code>安装</li><li>控制台运行<code>npx i eslint --init</code>安装并执行<code>eslint</code>初始化</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>√ How would you like to use ESLint? · problems <span class="token comment"># 是否安装</span>
√ What <span class="token builtin class-name">type</span> of modules does your project use? · esm <span class="token comment"># es 模块</span>
√ Which framework does your project use? · vue <span class="token comment"># vue 框架</span>
√ Does your project use TypeScript? · Yes <span class="token comment"># 使用 ts 语法</span>
√ Where does your code run? · browser, <span class="token function">node</span> <span class="token comment"># 浏览器与 node 环境</span>
√ What <span class="token function">format</span> <span class="token keyword">do</span> you want your config <span class="token function">file</span> to be in? · JavaScript <span class="token comment"># js 文件来配置</span>
√ Would you like to <span class="token function">install</span> them now? · Yes <span class="token comment"># 安装需要的插件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h2><ul><li>依赖：<code>npm i @vue/eslint-config-typescript -D</code>.vue 文件的 ts 校验</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// .eslintrc.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">env</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">browser</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">es2021</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">node</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&#39;eslint:recommended&#39;</span><span class="token punctuation">,</span> <span class="token comment">// eslint 推荐规范</span>
    <span class="token string">&#39;@vue/typescript/recommended&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 校验 .vue 文件的 ts，需要安装 npm i @vue/eslint-config-typescript -D</span>
    <span class="token string">&#39;plugin:@typescript-eslint/recommended&#39;</span><span class="token punctuation">,</span> <span class="token comment">// ts 语法插件</span>
    <span class="token string">&#39;plugin:vue/vue3-recommended&#39;</span><span class="token punctuation">,</span> <span class="token comment">// vue3解析 https://eslint.vuejs.org/</span>
    <span class="token string">&#39;plugin:prettier/recommended&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 使 eslint 使用 prettierrc 的规则来校验，避免两者之间的格式冲突，添加到数组的最后一个元素覆盖来去除不必要的规则冲突。</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">parserOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">ecmaVersion</span><span class="token operator">:</span> <span class="token string">&#39;latest&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">parser</span><span class="token operator">:</span> <span class="token string">&#39;@typescript-eslint/parser&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">sourceType</span><span class="token operator">:</span> <span class="token string">&#39;module&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;vue&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;@typescript-eslint&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;vue/html-self-closing&#39;</span><span class="token operator">:</span> <span class="token string">&#39;off&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 禁用强制将 &lt;MyComponent&gt;&lt;/MyComponent&gt; 必须使用 &lt;MyComponent/&gt; 的校验</span>
    <span class="token string-property property">&#39;vue/singleline-html-element-content-newline&#39;</span><span class="token operator">:</span> <span class="token string">&#39;off&#39;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;vue/multi-word-component-names&#39;</span><span class="token operator">:</span> <span class="token string">&#39;off&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 禁用注册组件 name 不能使用 大写 的报错</span>
    <span class="token string-property property">&#39;vue/prefer-import-from-vue&#39;</span><span class="token operator">:</span> <span class="token string">&#39;off&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 禁用 import x from &#39;@vue/runtime-dom&#39; 包以 @/ 开头的报错</span>
    <span class="token string-property property">&#39;@typescript-eslint/no-non-null-assertion&#39;</span><span class="token operator">:</span> <span class="token string">&#39;off&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 允许使用 ts 语法 obj!.a</span>
    <span class="token string-property property">&#39;vue/valid-v-for&#39;</span><span class="token operator">:</span> <span class="token string">&#39;off&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 禁用 v-for 语法校验， vue3 v-for 不需要绑定 :key，不禁用会报没有绑定 key 的警告</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">globals</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">defineOptions</span><span class="token operator">:</span> <span class="token string">&#39;readonly&#39;</span><span class="token punctuation">,</span> <span class="token comment">// unplugin-vue-define-options vite 插件的全局变量</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置不要做格式校验的文件" tabindex="-1"><a class="header-anchor" href="#配置不要做格式校验的文件"><span>配置不要做格式校验的文件</span></a></h2><p>根目录<code>.eslintignore</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 配置不需要做代码格式校验的文件</span>
node_modules
dist
*.css
*.jpg
*.jpeg
*.png
*.gif
*.d.ts
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="代码格式化" tabindex="-1"><a class="header-anchor" href="#代码格式化"><span>代码格式化</span></a></h2><ul><li><p><code>vscode</code>安装插件<code>Prettier - Code formatter</code></p></li><li><p>配置格式化规则</p></li></ul><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code>// .prettierrc.yaml
<span class="token key atrule">singleQuote</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># false 不使用单引号</span>
<span class="token key atrule">semi</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># false 不使用分号</span>
<span class="token key atrule">trailingComma</span><span class="token punctuation">:</span> <span class="token string">&quot;es5&quot;</span> <span class="token comment"># 在多行数组、对象的最后一项添加逗号，单行数组不会添加。</span>
<span class="token key atrule">arrowParens</span><span class="token punctuation">:</span> <span class="token string">&quot;avoid&quot;</span> <span class="token comment"># 箭头函数只有一个参数时省略括号</span>
<span class="token key atrule">endOfLine</span><span class="token punctuation">:</span> <span class="token string">&quot;auto&quot;</span> <span class="token comment"># 结尾自动换行</span>
<span class="token key atrule">singleAttributePerLine</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># true 标签属性使用单行</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>配置不需要格式化的文件</li></ul><p>根目录<code>.prettierignore</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 配置不需要格式化的文件</span>
node_modules
dist
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置prettier格式化与eslint一致" tabindex="-1"><a class="header-anchor" href="#配置prettier格式化与eslint一致"><span>配置<code>prettier</code>格式化与<code>eslint</code>一致</span></a></h2><ol><li>vscode 快捷键 <code>ctrl + ,</code> 打开设置</li><li>搜索<code>formatter</code></li><li><code>Editor:Default Formatter</code>设置为<code>Prettier - Code formatter</code></li><li>搜索<code>formatter on save</code>打钩，在报存是自动格式化</li></ol>`,26),p=[o];function l(i,c){return s(),e("div",null,p)}const u=n(t,[["render",l],["__file","eslintrc.html.vue"]]),m=JSON.parse('{"path":"/posts/engineering/eslintrc.html","title":"eslintrc","lang":"zh-CN","frontmatter":{"icon":"linter","order":8,"date":"2021-05-27T00:00:00.000Z","author":"h7ml","title":"eslintrc","category":"engineering","tag":"eslint","star":true,"description":"用于配置 ESLint 规则的配置文件 通常的表现形式有： package.json 中配置 eslintConfig 字段 使用 json、javascript、yaml 编写的 .eslintrc.* 文件 有很多信息可以配置： Environments - 指定脚本的运行环境。每种环境都有一组特定的预定义全局变量。 Globals - 脚本在执行...","head":[["link",{"rel":"canonical","href":"https://www.h7ml.cn/posts/engineering/eslintrc.html"}],["meta",{"property":"og:url","content":"https://www.h7ml.cn/posts/engineering/eslintrc.html"}],["meta",{"property":"og:site_name","content":"h7ml-前端物语"}],["meta",{"property":"og:title","content":"eslintrc"}],["meta",{"property":"og:description","content":"用于配置 ESLint 规则的配置文件 通常的表现形式有： package.json 中配置 eslintConfig 字段 使用 json、javascript、yaml 编写的 .eslintrc.* 文件 有很多信息可以配置： Environments - 指定脚本的运行环境。每种环境都有一组特定的预定义全局变量。 Globals - 脚本在执行..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-03T04:52:44.000Z"}],["meta",{"property":"article:author","content":"h7ml"}],["meta",{"property":"article:tag","content":"eslint"}],["meta",{"property":"article:published_time","content":"2021-05-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-03T04:52:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"eslintrc\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-05-27T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-03T04:52:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"h7ml\\"}]}"]]},"headers":[{"level":2,"title":"例子","slug":"例子","link":"#例子","children":[]},{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"配置","slug":"配置","link":"#配置","children":[]},{"level":2,"title":"配置不要做格式校验的文件","slug":"配置不要做格式校验的文件","link":"#配置不要做格式校验的文件","children":[]},{"level":2,"title":"代码格式化","slug":"代码格式化","link":"#代码格式化","children":[]},{"level":2,"title":"配置prettier格式化与eslint一致","slug":"配置prettier格式化与eslint一致","link":"#配置prettier格式化与eslint一致","children":[]}],"git":{"createdTime":1683089564000,"updatedTime":1683089564000,"contributors":[{"name":"h7ml","email":"h7ml@qq.com","commits":1}]},"readingTime":{"minutes":2.56,"words":769},"filePathRelative":"posts/engineering/eslintrc.md","localizedDate":"2021年5月27日","excerpt":"<p>用于配置 ESLint 规则的配置文件</p>\\n<p>通常的表现形式有：</p>\\n<ul>\\n<li><code>package.json</code> 中配置 <code>eslintConfig</code> 字段</li>\\n<li>使用 <code>json</code>、<code>javascript</code>、<code>yaml</code> 编写的 <code>.eslintrc.*</code> 文件</li>\\n</ul>\\n<p>有很多信息可以配置：</p>\\n<ul>\\n<li>Environments - 指定脚本的运行环境。每种环境都有一组特定的预定义全局变量。</li>\\n<li>Globals - 脚本在执行期间访问的额外的全局变量。</li>\\n<li>Rules - 启用的规则及其各自的错误级别。</li>\\n</ul>","autoDesc":true}');export{u as comp,m as data};
