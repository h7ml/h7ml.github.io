import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as o,f as c}from"./app-Cbix2SPG.js";const n={},p=c("<p>原型模式在基于类的语言中作用大一些，当构造函数比较复杂，有一些耗时操作，此时通过 <code>new</code> 去创建对象不划算，可以通过 <code>clone</code> 的方法，直接基于已有对象 <code>copy</code> 一个。</p><p><code>js</code> 属于基于原型的面向对象的编程语言，本身就是基于一个对象来生成另一个对象，并没有真正的类。</p><p>我们可以直接通过 <code>Object.create</code> 或者 <code>json</code> 序列化反序列化 <code>copy</code> 一个对象。</p>",3),r=[p];function a(m,d){return t(),o("div",null,r)}const s=e(n,[["render",a],["__file","prototype.html.vue"]]),h=JSON.parse('{"path":"/posts/designPattern/prototype.html","title":"原型模式","lang":"zh-CN","frontmatter":{"title":"原型模式","category":["设计模式","frontend"],"author":"h7ml","image":"https://www.h7ml.cn/logo.png","banner":"https://www.h7ml.cn/logo.png","tag":["设计模式","frontend"],"date":"2022-02-27T11:53:19.000Z","description":"原型模式在基于类的语言中作用大一些，当构造函数比较复杂，有一些耗时操作，此时通过 new 去创建对象不划算，可以通过 clone 的方法，直接基于已有对象 copy 一个。 js 属于基于原型的面向对象的编程语言，本身就是基于一个对象来生成另一个对象，并没有真正的类。 我们可以直接通过 Object.create 或者 json 序列化反序列化 cop...","head":[["link",{"rel":"canonical","href":"https://www.h7ml.cn/posts/designPattern/prototype.html"}],["meta",{"property":"og:url","content":"https://www.h7ml.cn/posts/designPattern/prototype.html"}],["meta",{"property":"og:site_name","content":"h7ml-前端物语"}],["meta",{"property":"og:title","content":"原型模式"}],["meta",{"property":"og:description","content":"原型模式在基于类的语言中作用大一些，当构造函数比较复杂，有一些耗时操作，此时通过 new 去创建对象不划算，可以通过 clone 的方法，直接基于已有对象 copy 一个。 js 属于基于原型的面向对象的编程语言，本身就是基于一个对象来生成另一个对象，并没有真正的类。 我们可以直接通过 Object.create 或者 json 序列化反序列化 cop..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://www.h7ml.cn/logo.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-03T04:52:44.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://www.h7ml.cn/logo.png"}],["meta",{"name":"twitter:image:alt","content":"原型模式"}],["meta",{"property":"article:author","content":"h7ml"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:tag","content":"frontend"}],["meta",{"property":"article:published_time","content":"2022-02-27T11:53:19.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-03T04:52:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"原型模式\\",\\"image\\":[\\"https://www.h7ml.cn/logo.png\\"],\\"datePublished\\":\\"2022-02-27T11:53:19.000Z\\",\\"dateModified\\":\\"2023-05-03T04:52:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"h7ml\\"}]}"]]},"headers":[],"git":{"createdTime":1683089564000,"updatedTime":1683089564000,"contributors":[{"name":"h7ml","email":"h7ml@qq.com","commits":1}]},"readingTime":{"minutes":0.54,"words":163},"filePathRelative":"posts/designPattern/prototype.md","localizedDate":"2022年2月27日","excerpt":"<p>原型模式在基于类的语言中作用大一些，当构造函数比较复杂，有一些耗时操作，此时通过 <code>new</code> 去创建对象不划算，可以通过 <code>clone</code> 的方法，直接基于已有对象 <code>copy</code> 一个。</p>\\n<p><code>js</code> 属于基于原型的面向对象的编程语言，本身就是基于一个对象来生成另一个对象，并没有真正的类。</p>\\n<p>我们可以直接通过 <code>Object.create</code> 或者 <code>json</code> 序列化反序列化 <code>copy</code> 一个对象。</p>\\n","autoDesc":true}');export{s as comp,h as data};
