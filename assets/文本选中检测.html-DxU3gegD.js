import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,f as t}from"./app-Cbix2SPG.js";const e={},p=t(`<h1 id="javascript-文本选中检测" tabindex="-1"><a class="header-anchor" href="#javascript-文本选中检测"><span>JavaScript 文本选中检测</span></a></h1><h2 id="选中文本" tabindex="-1"><a class="header-anchor" href="#选中文本"><span>选中文本</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>inp<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 选中文本框中的所有文字</span>
<span class="token keyword">function</span> <span class="token function">getSelectedText</span><span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> text<span class="token punctuation">.</span>selectionStart <span class="token operator">==</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
​  <span class="token comment">// 选择文字的起始，结束下标</span>
  <span class="token keyword">return</span> text<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span>selectionStart<span class="token punctuation">,</span>text<span class="token punctuation">.</span>selectionEnd<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>selecttion<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">// IE 取得 IE 中的选择文本代码 调用 document.selecttion 不需要考虑 text 参数</span>
  <span class="token keyword">return</span> document<span class="token punctuation">.</span>selecttion<span class="token punctuation">.</span><span class="token function">createRang</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">;</span>
​  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="输入检测" tabindex="-1"><a class="header-anchor" href="#输入检测"><span>输入检测</span></a></h2><p>检测浏览器是否支持 pattern 属性</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> isPatternSupported <span class="token operator">=</span> <span class="token string">&#39;pattern&#39;</span> <span class="token keyword">in</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;input&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

input<span class="token punctuation">.</span><span class="token function">stepUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 加 1</span>
input<span class="token punctuation">.</span><span class="token function">stepUp</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 加 5</span>
input<span class="token punctuation">.</span><span class="token function">stepDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 减 1</span>
input<span class="token punctuation">.</span><span class="token function">stepDown</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 减 5</span>

<span class="token comment">// 检测有效性</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>forms<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">checkValidity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 整个表单有效，返回 true。 也可以单独 input 调用这个方法</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>customError：如果设置了 setCustomValidity()，则为 true，否则返回 false</li><li>patternMismatch：如果值与指定的 pattern 属性不匹配，返回 true</li><li>reangeOverflow：如果值比 max 值大，返回 true</li><li>rangeUnderflow：如果值比 min 值小，返回 true</li><li>stepMisMatch：如果 min 和 max 直接的步长值不合理，返回 true</li><li>tooLong：值的长度超过了 maxlenght 属性指定的长度，返回 true。火狐会自动约束字符数量，所以会永远返回 true</li><li>typeMismatch：如果值不是 &#39;mail&#39; 或 &#39;url&#39; 要求的格式，返回 true</li><li>valid：如果这里的属性都是 false，返回 true。checkValidity() 也要求相同的值</li><li>valueMissing：如果标注为 required 的字段中没有值，返回 true</li></ul><h2 id="选择框脚本" tabindex="-1"><a class="header-anchor" href="#选择框脚本"><span>选择框脚本</span></a></h2><ul><li>add（new option, relOption）：向控件中插入行的 &lt;option&gt;</li><li>multiple：布尔值，是否允许多选</li><li>options：控件中所有 &lt;option&gt; 元素的 HTMLCollection</li><li>remove(index)：移除给定位置的选项</li><li>selectedIndex：选中的索引，从 0 开始，没有则是 -1</li><li>size：选择框可见的行数</li></ul><p>每个 &lt;option&gt; 都有一个 HTMLOptionElement 对象</p><ul><li>index：当前选项在 option 集合中的索引</li><li>label：当前选择的标签；等价于 html 中 label 的特性</li><li>selected：布尔值，表示当前选项是否被选中，设为 true 可以选中当前选项</li><li>text：选项的文本</li><li>value：选项的值</li></ul>`,11),o=[p];function c(i,l){return s(),a("div",null,o)}const k=n(e,[["render",c],["__file","文本选中检测.html.vue"]]),d=JSON.parse(`{"path":"/posts/javascript/form/%E6%96%87%E6%9C%AC%E9%80%89%E4%B8%AD%E6%A3%80%E6%B5%8B.html","title":"JavaScript 文本选中检测","lang":"zh-CN","frontmatter":{"description":"JavaScript 文本选中检测 选中文本 输入检测 检测浏览器是否支持 pattern 属性 customError：如果设置了 setCustomValidity()，则为 true，否则返回 false patternMismatch：如果值与指定的 pattern 属性不匹配，返回 true reangeOverflow：如果值比 max 值...","head":[["link",{"rel":"canonical","href":"https://www.h7ml.cn/posts/javascript/form/%E6%96%87%E6%9C%AC%E9%80%89%E4%B8%AD%E6%A3%80%E6%B5%8B.html"}],["meta",{"property":"og:url","content":"https://www.h7ml.cn/posts/javascript/form/%E6%96%87%E6%9C%AC%E9%80%89%E4%B8%AD%E6%A3%80%E6%B5%8B.html"}],["meta",{"property":"og:site_name","content":"h7ml-前端物语"}],["meta",{"property":"og:title","content":"JavaScript 文本选中检测"}],["meta",{"property":"og:description","content":"JavaScript 文本选中检测 选中文本 输入检测 检测浏览器是否支持 pattern 属性 customError：如果设置了 setCustomValidity()，则为 true，否则返回 false patternMismatch：如果值与指定的 pattern 属性不匹配，返回 true reangeOverflow：如果值比 max 值..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-03T04:52:44.000Z"}],["meta",{"property":"article:author","content":"h7ml"}],["meta",{"property":"article:modified_time","content":"2023-05-03T04:52:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JavaScript 文本选中检测\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-03T04:52:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"h7ml\\",\\"url\\":\\"https://www.h7ml.cn\\"}]}"]]},"headers":[{"level":2,"title":"选中文本","slug":"选中文本","link":"#选中文本","children":[]},{"level":2,"title":"输入检测","slug":"输入检测","link":"#输入检测","children":[]},{"level":2,"title":"选择框脚本","slug":"选择框脚本","link":"#选择框脚本","children":[]}],"git":{"createdTime":1683089564000,"updatedTime":1683089564000,"contributors":[{"name":"h7ml","email":"h7ml@qq.com","commits":1}]},"readingTime":{"minutes":1.56,"words":468},"filePathRelative":"posts/javascript/form/文本选中检测.md","localizedDate":"2023年5月3日","excerpt":"\\n<h2>选中文本</h2>\\n<div class=\\"language-javascript\\" data-ext=\\"js\\" data-title=\\"js\\"><pre class=\\"language-javascript\\"><code>inp<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">select</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 选中文本框中的所有文字</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">getSelectedText</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">text</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">typeof</span> text<span class=\\"token punctuation\\">.</span>selectionStart <span class=\\"token operator\\">==</span> <span class=\\"token string\\">'number'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n​  <span class=\\"token comment\\">// 选择文字的起始，结束下标</span>\\n  <span class=\\"token keyword\\">return</span> text<span class=\\"token punctuation\\">.</span>value<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">substring</span><span class=\\"token punctuation\\">(</span>text<span class=\\"token punctuation\\">.</span>selectionStart<span class=\\"token punctuation\\">,</span>text<span class=\\"token punctuation\\">.</span>selectionEnd<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>document<span class=\\"token punctuation\\">.</span>selecttion<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span><span class=\\"token comment\\">// IE 取得 IE 中的选择文本代码 调用 document.selecttion 不需要考虑 text 参数</span>\\n  <span class=\\"token keyword\\">return</span> document<span class=\\"token punctuation\\">.</span>selecttion<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">createRang</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>text<span class=\\"token punctuation\\">;</span>\\n​  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}`);export{k as comp,d as data};
