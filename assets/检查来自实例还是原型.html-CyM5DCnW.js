import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,f as t}from"./app-Cbix2SPG.js";const e={},p=t(`<h1 id="javascript-检查来自实例还是原型" tabindex="-1"><a class="header-anchor" href="#javascript-检查来自实例还是原型"><span>JavaScript 检查来自实例还是原型</span></a></h1><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>fn1 <span class="token keyword">instanceof</span> <span class="token class-name">Fun</span><span class="token punctuation">;</span> <span class="token comment">// fn1 是由构造函数 Fun 构造出来的吗？返回 Boolean</span>
Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>Person<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回 Person 构造函数的原型</span>
Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>Person<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="检查来自实例还是原型" tabindex="-1"><a class="header-anchor" href="#检查来自实例还是原型"><span>检查来自实例还是原型</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>Person<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&#39;fun&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 是来自实例返回 true，不是返回 false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span> <span class="token keyword">in</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 实例或原型上有都返回 true</span>

<span class="token comment">// 利用hasOwnProperty 与 in 判断到底来自实例还是原型</span>
<span class="token keyword">function</span> <span class="token function">hasO</span><span class="token punctuation">(</span><span class="token parameter">object<span class="token punctuation">,</span> name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> object<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> name <span class="token keyword">in</span> object<span class="token punctuation">;</span>
  <span class="token comment">// 判断是不是来自实例，如果不是，再in判断是不是原型</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="返回实例或原型" tabindex="-1"><a class="header-anchor" href="#返回实例或原型"><span>返回实例或原型</span></a></h3><p>将实例保存为数组</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;nn&#39;</span><span class="token punctuation">;</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">sayName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;name&quot;, &quot;sayName&quot;] 原型中的所有实例</span>
Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;age&quot;] 只返回p 的实例</span>
Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span><span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;constructor&quot;, &quot;name&quot;, &quot;job&quot;, &quot;sayName&quot;] 包含constructor</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),o=[p];function c(l,i){return s(),a("div",null,o)}const k=n(e,[["render",c],["__file","检查来自实例还是原型.html.vue"]]),d=JSON.parse('{"path":"/posts/html/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E6%A3%80%E6%9F%A5%E6%9D%A5%E8%87%AA%E5%AE%9E%E4%BE%8B%E8%BF%98%E6%98%AF%E5%8E%9F%E5%9E%8B.html","title":"JavaScript 检查来自实例还是原型","lang":"zh-CN","frontmatter":{"description":"JavaScript 检查来自实例还是原型 方法 检查来自实例还是原型 返回实例或原型 将实例保存为数组","head":[["link",{"rel":"canonical","href":"https://www.h7ml.cn/posts/html/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E6%A3%80%E6%9F%A5%E6%9D%A5%E8%87%AA%E5%AE%9E%E4%BE%8B%E8%BF%98%E6%98%AF%E5%8E%9F%E5%9E%8B.html"}],["meta",{"property":"og:url","content":"https://www.h7ml.cn/posts/html/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E6%A3%80%E6%9F%A5%E6%9D%A5%E8%87%AA%E5%AE%9E%E4%BE%8B%E8%BF%98%E6%98%AF%E5%8E%9F%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"h7ml-前端物语"}],["meta",{"property":"og:title","content":"JavaScript 检查来自实例还是原型"}],["meta",{"property":"og:description","content":"JavaScript 检查来自实例还是原型 方法 检查来自实例还是原型 返回实例或原型 将实例保存为数组"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-03T04:52:44.000Z"}],["meta",{"property":"article:author","content":"h7ml"}],["meta",{"property":"article:modified_time","content":"2023-05-03T04:52:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JavaScript 检查来自实例还是原型\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-03T04:52:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"h7ml\\",\\"url\\":\\"https://www.h7ml.cn\\"}]}"]]},"headers":[{"level":2,"title":"方法","slug":"方法","link":"#方法","children":[{"level":3,"title":"检查来自实例还是原型","slug":"检查来自实例还是原型","link":"#检查来自实例还是原型","children":[]},{"level":3,"title":"返回实例或原型","slug":"返回实例或原型","link":"#返回实例或原型","children":[]}]}],"git":{"createdTime":1683089564000,"updatedTime":1683089564000,"contributors":[{"name":"h7ml","email":"h7ml@qq.com","commits":1}]},"readingTime":{"minutes":0.7,"words":209},"filePathRelative":"posts/html/面向对象/检查来自实例还是原型.md","localizedDate":"2023年5月3日","excerpt":"\\n<h2>方法</h2>\\n<div class=\\"language-javascript\\" data-ext=\\"js\\" data-title=\\"js\\"><pre class=\\"language-javascript\\"><code>fn1 <span class=\\"token keyword\\">instanceof</span> <span class=\\"token class-name\\">Fun</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// fn1 是由构造函数 Fun 构造出来的吗？返回 Boolean</span>\\nObject<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getPrototypeOf</span><span class=\\"token punctuation\\">(</span>Person<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 返回 Person 构造函数的原型</span>\\nObject<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getPrototypeOf</span><span class=\\"token punctuation\\">(</span>Person<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">==</span> <span class=\\"token class-name\\">Person</span><span class=\\"token punctuation\\">.</span>prototype<span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// true</span>\\n</code></pre></div>","autoDesc":true}');export{k as comp,d as data};
